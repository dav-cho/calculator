import { calculate, FilteredInput } from './calculator';

const testCases: [string, number | FilteredInput][] = [
  ['1 + 2', 3],
  ['4*5/2', 10],
  ['-5+-8--11*2', 9],
  ['-.32       /.5', -0.64],
  ['(4-2)*3.5', 7],
  ['2+-+-4', 'Syntax Error'],
  ['19 + cinnamon', 'Invalid Expression'],
  ['2.0.0', 'Syntax Error'],
  ['+2 - 2', 'Syntax Error'],
  ['((3 + 4) * 6)', 42],
  ['()+3-4(2 - 4)', 'Syntax Error'],
  ['(3 + 4) * 6)', 'Unmatched Parenthesis'],
  ['(3 + 4) * 6))', 'Unmatched Parenthesis'],
  ['(3 + 4) * 6 - x', 'Invalid Expression'],
  ['(3 + 4) 4 - 3', 'Syntax Error'],
  ['0', 0],
  ['2 - 2', 0],
  ['1 + -2', -1],
  ['-1 + -2', -3],
  ['1', 1],
  ['-1', -1],
  ['(1)', 1],
  ['(-1)', -1],
  ['1 + 2', 3],
  ['(1 + 2)', 3],
  ['((1 + 2))', 3],
  ['(30 + 5)', 35],
  ['((30 + 5))', 35],
  ['44 / 22 + 35 * 4 - 62', 80],
  ['44 / 22 + 35 * 4 * 62', 8682],
  ['44.50 / 22.25 + (30 + 5) * 4 - 62', 80],
  ['44.50 / 22.25 + ((30 + 5)) * 4 - 62', 80],
  ['44.50 / 22.25 + ( 30 + 5 ) * 4 - 62', 80],
  ['44 / 22 + (30 + 5) * 4', 142],
  ['44 / 22 + (30 + 5) * 4 - 62', 80],
  ['44 / 22 + ((30 + 5)) * 4 - 62', 80],
  ['44.17 / 22.16 + ( 30 + 5 ) * 4 - 62', 79.99],
  ['2 / 2 + 3 * 4 - 6', 7],
  ['3 * 4 + 3 * 7 - 6', 27],
  ['1 + 1', 2],
  ['( ( ( ( 1 ) * 2 ) ) )', 2],
  ['( ( ( ( ( ( ( 5 ) ) ) ) ) ) )', 5],
  ['2 * ( 2 * ( 2 * ( 2 * 1 ) ) )', 16],
  ['3 * ( 4 + 7 ) - 6', 27],
  ['1 + 1', 2],
  [' 2-1 + 2 ', 3],
  ['(1+(4+5+2)-3)+(6+8)', 23],
  ['3+2*2', 7],
  [' 3/2 ', 1.5],
  [' 3+5 / 2 ', 5.5],
  ['1+1', 2],
  ['6-4/2', 4],
  ['2*(5+5*2)/3+(6/2+8)', 21],
  ['(2+6*3+5-(3*14/7+2)*5)+3', -12],
];

for (const [testCase, result] of testCases) {
  test(`${testCase} = ${result}`, () => {
    expect(calculate(testCase)).toBe(result);
  });
}
