{"version":3,"sources":["contexts/error-message.context.tsx","components/nav/nav.component.tsx","components/calculator/calculator.ts","components/calculator/display/display.component.tsx","components/calculator/button/button.component.tsx","components/calculator/controls/controls.component.tsx","components/calculator/calculator.component.tsx","components/calculator/calculator.utils.ts","assets/error-icon.svg","components/error-message/error-message.component.tsx","components/help/help.component.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ErrorMessageContext","createContext","isInvalidExpression","setIsInvalidExpression","errorMessage","setErrorMessage","useErrorMessageContext","useContext","ErrorMessageContextProvider","children","useState","invalidExpression","setInvalidExpression","Provider","value","Nav","setHelpModalOpen","helpLinkRef","useRef","className","href","ref","onClick","event","preventDefault","current","blur","filterInput","inputString","inputArray","currNum","periodCount","parensCount","i","length","char","push","includes","prevChar","isNaN","Number","operatorCount","j","calculate","calculatedNums","prevOperator","currentElement","subExpression","subExpressionResult","pop","res","reduce","totalSum","Math","round","EPSILON","Display","currDisplay","setDisplay","setDisplayFocused","type","onChange","displayValue","target","replace","onFocus","onBlur","Button","name","display","handleClick","otherProps","valid","setValid","validateButton","buttonValue","filteredNextPossibleDisplay","lastCharacter","Array","isArray","onMouseEnter","onMouseLeave","Controls","props","map","Calculator","helpModalOpen","displayFocused","handleCalculate","useCallback","result","toString","handleKeyDown","keyValue","key","keyButtonValue","checkNumbers","checkOperators","checkParens","checkControls","checkValidInputValue","prevDisplay","slice","useEffect","validatedDisplay","window","addEventListener","removeEventListener","_extends","Object","assign","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","d","SvgErrorIcon","_ref","svgRef","title","titleId","xmlns","height","viewBox","width","fill","id","ForwardRef","ErrorMessage","Help","isOpen","setIsOpen","closeModal","createPortal","document","getElementById","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5446471c.chunk.js","sourcesContent":["import { useState, createContext, useContext } from 'react';\n\ntype ErrorMessageContextProps = {\n  isInvalidExpression: boolean;\n  setIsInvalidExpression: React.Dispatch<React.SetStateAction<boolean>>;\n  errorMessage: string;\n  setErrorMessage: React.Dispatch<React.SetStateAction<string>>;\n};\n\nconst ErrorMessageContext = createContext<ErrorMessageContextProps>({\n  isInvalidExpression: false,\n  setIsInvalidExpression: () => {},\n  errorMessage: '',\n  setErrorMessage: () => {},\n});\n\nexport const useErrorMessageContext = () => useContext(ErrorMessageContext);\n\nexport const ErrorMessageContextProvider = ({ children }: any) => {\n  const [invalidExpression, setInvalidExpression] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  return (\n    <ErrorMessageContext.Provider\n      value={{\n        isInvalidExpression: invalidExpression,\n        setIsInvalidExpression: setInvalidExpression,\n        errorMessage,\n        setErrorMessage,\n      }}\n    >\n      {children}\n    </ErrorMessageContext.Provider>\n  );\n};\n","import { useRef } from 'react';\n\nimport './nav.styles.scss';\n\ninterface NavProps {\n  setHelpModalOpen: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nexport const Nav = ({ setHelpModalOpen }: NavProps) => {\n  const helpLinkRef = useRef<HTMLAnchorElement>(null);\n\n  const openHelpModal = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n\n    setHelpModalOpen(true);\n    helpLinkRef.current!.blur();\n  };\n\n  return (\n    <>\n      <div className=\"nav\">\n        <div className=\"title\">\n          <h1>calculator</h1>\n        </div>\n        <a href=\"/\" ref={helpLinkRef} onClick={openHelpModal}>\n          help\n        </a>\n      </div>\n    </>\n  );\n};\n","/**\n * Calculator logic\n **/\n\n/**\n * Parse input into an array for handling in calculate function\n **/\nexport type FilteredInput =\n  | string[]\n  | 'Syntax Error'\n  | 'Invalid Expression'\n  | 'Unmatched Parenthesis'\n  | '';\n\nexport const filterInput = (inputString: string): FilteredInput => {\n  let inputArray = [];\n  let currNum = ''; // holds values for next number to be added into inputArray\n  let periodCount = 0;\n  let parensCount = 0;\n\n  for (let i = 0; i < inputString.length; ++i) {\n    const char = inputString[i];\n\n    if (char === ' ') {\n      continue;\n    }\n\n    // Builds the full number\n    if ((char >= '0' && char <= '9') || char === '.') {\n      if (inputArray[inputArray.length - 1] === ')') {\n        return 'Syntax Error';\n      }\n\n      if (char === '.') {\n        if (periodCount) {\n          return 'Syntax Error';\n        } else {\n          periodCount++;\n        }\n      }\n\n      currNum += char;\n    } else {\n      // If there is a value stored in currNum, check to make sure it's a valid number string\n      // and store it in inputArray and reset currNum\n      if (currNum) {\n        inputArray.push(currNum);\n        currNum = '';\n        periodCount = 0;\n      }\n\n      // Handle parenthesis\n      if ('()'.includes(char)) {\n        if (char === '(') {\n          const prevChar = inputArray[inputArray.length - 1];\n\n          if (!isNaN(Number(prevChar))) {\n            return 'Syntax Error';\n          }\n\n          parensCount++;\n        } else if (char === ')') {\n          parensCount--;\n\n          if (parensCount < 0) {\n            return 'Unmatched Parenthesis';\n          }\n        }\n\n        inputArray.push(char);\n      }\n      // Handle operators except subtraction\n      else if ('+*/'.includes(char)) {\n        const prevChar = inputArray[inputArray.length - 1];\n\n        if (!inputArray.length || prevChar === '(') {\n          return 'Syntax Error';\n        } else if (!'+-*/('.includes(prevChar)) {\n          // If last elemeent in inputArray is not an operator or opening parenthesis\n          inputArray.push(char);\n        } else {\n          return 'Syntax Error';\n        }\n      }\n      // Handle subtraction operator\n      else if (char === '-') {\n        if (\n          !inputArray ||\n          (inputArray && inputArray[inputArray.length - 1] === '(')\n        ) {\n          // If it's the first character or last element in inputArray is an opening\n          // parenthesis, handle the next number as a negative number\n          currNum += '-';\n        } else {\n          // Count the number of consecutive operators in inputArray that precede current char\n          let operatorCount = 0;\n          let j = inputArray.length - 1;\n\n          while (\n            j >= 0 &&\n            '+-*/'.includes(inputArray[j]) &&\n            operatorCount < 3\n          ) {\n            operatorCount++;\n            j--;\n          }\n\n          if (operatorCount === 1) {\n            // If preceding element is an operator, handle next number as a negative number\n            currNum += '-';\n          } else if (operatorCount === 0) {\n            // No previous operators and not the first character or the first character\n            // after an opening parenthesis - Append to inputArray as an operator\n            inputArray.push(char);\n          } else {\n            return 'Syntax Error';\n          }\n        }\n      }\n      // Handle any other invalid character\n      else {\n        // Current character does not match any valid characters\n        return 'Invalid Expression';\n      }\n    }\n  }\n\n  // if parenthesis are not balanced, return syntax error\n  if (parensCount) {\n    return 'Unmatched Parenthesis';\n  }\n\n  // if there is a value leftover in currNum, add it to inputArray\n  if (currNum) {\n    inputArray.push(currNum);\n  }\n\n  return inputArray;\n};\n\n/**\n * Perform calculation from string input\n **/\n// export const calculate = (inputString: string): number => {\nexport const calculate = (inputString: string): number | FilteredInput => {\n  const inputArray = filterInput(inputString);\n\n  if (typeof inputArray === 'string') {\n    return inputArray;\n  }\n\n  // store calculated numbers in a stack and current number and previous operator\n  // in order to handle operator precedence\n  const calculatedNums: number[] = [];\n  let currNum = 0;\n  let prevOperator = '+';\n  let i = 0;\n\n  if (inputArray.length === 1) {\n    return +inputArray[0];\n  }\n\n  while (i < inputArray.length) {\n    let currentElement = inputArray[i];\n\n    if (\n      (currentElement >= '0' && currentElement <= '9') ||\n      currentElement.length > 1\n    ) {\n      currNum = +currentElement;\n    } else if (currentElement === '(') {\n      // Buiild and evaluate a sub expression to handle parenthesis\n      let subExpression = '';\n      let parensCount = 1;\n\n      while (++i < inputArray.length && parensCount > 0) {\n        if (inputArray[i] === '(') {\n          parensCount++;\n        } else if (inputArray[i] === ')') {\n          if (parensCount === 1) {\n            break;\n          }\n\n          parensCount--;\n        }\n\n        subExpression += inputArray[i];\n      }\n\n      if (!subExpression) {\n        return '';\n      }\n\n      const subExpressionResult = calculate(subExpression);\n\n      if (typeof subExpressionResult === 'number') {\n        currNum = subExpressionResult;\n      } else {\n        return subExpressionResult;\n      }\n\n      currentElement = inputArray[i];\n    }\n\n    if ('+-*/'.includes(currentElement) || i === inputArray.length - 1) {\n      // perform operation based on prevOperator and current number or previous number in\n      // calculatedNums stack\n      switch (prevOperator) {\n        case '+':\n          calculatedNums.push(currNum);\n          break;\n        case '-':\n          calculatedNums.push(-currNum);\n          break;\n        case '*':\n          calculatedNums.push(calculatedNums.pop()! * currNum);\n          break;\n        case '/':\n          calculatedNums.push(calculatedNums.pop()! / currNum);\n          break;\n      }\n\n      prevOperator = currentElement;\n      currNum = 0;\n    }\n\n    i++;\n  }\n\n  const res = calculatedNums.reduce((totalSum, currNum) => totalSum + currNum);\n\n  return Math.round((res + Number.EPSILON) * 100) / 100;\n};\n","import { useErrorMessageContext } from '../../../contexts/error-message.context';\n\nimport './display.styles.scss';\n\ninterface DisplayProps {\n  currDisplay: string;\n  setDisplay: React.Dispatch<React.SetStateAction<string>>;\n  setDisplayFocused: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nexport const Display = ({\n  currDisplay,\n  setDisplay,\n  setDisplayFocused,\n}: DisplayProps) => {\n  const { isInvalidExpression } = useErrorMessageContext();\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    let displayValue = event.target.value;\n\n    displayValue = displayValue.replace(' ', '');\n    setDisplay(displayValue);\n  };\n\n  const handleFocus = () => {\n    setDisplayFocused(true);\n  };\n\n  const handleBlur = () => {\n    setDisplayFocused(false);\n  };\n\n  return (\n    <div className=\"display\">\n      <input\n        type=\"text\"\n        value={currDisplay}\n        className={isInvalidExpression ? 'invalid' : ''}\n        onChange={handleChange}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n      />\n    </div>\n  );\n};\n","import { useState } from 'react';\n\nimport { filterInput } from '../calculator';\n\nimport './button.styles.scss';\n\ninterface ButtonProps {\n  name: string;\n  value: string;\n  display: string;\n  handleClick: React.MouseEventHandler;\n}\n\nexport const Button = ({\n  name,\n  value,\n  display,\n  handleClick,\n  ...otherProps\n}: ButtonProps) => {\n  const [valid, setValid] = useState(true);\n\n  const validateButton = (buttonValue: string) => {\n    const nextPossibleDisplay = display + buttonValue;\n    const filteredNextPossibleDisplay = filterInput(nextPossibleDisplay);\n    const lastCharacter = display[display.length - 1];\n\n    if (\n      ['del', 'clear', '='].includes(buttonValue) ||\n      lastCharacter === '('\n    ) {\n      return;\n    }\n\n    if (!Array.isArray(filteredNextPossibleDisplay)) {\n      setValid(false);\n    } else {\n      setValid(true);\n    }\n  };\n\n  return (\n    <button\n      value={value}\n      className={valid ? 'button valid' : 'button invalid'}\n      onClick={handleClick}\n      onMouseEnter={() => validateButton(value)}\n      onMouseLeave={() => validateButton(value)}\n      {...otherProps}\n    >\n      {name}\n    </button>\n  );\n};\n","import { Button } from '../button/button.component';\n\nimport './controls.styles.scss';\n\ninterface ControlsProps {\n  display: string;\n  handleClick: React.MouseEventHandler;\n}\n\nexport const Controls = (props: ControlsProps) => {\n  const buttons = [\n    { name: '(', value: '(' },\n    { name: ')', value: ')' },\n    { name: '<-', value: 'del' },\n    { name: 'AC', value: 'clear' },\n    { name: '7', value: '7' },\n    { name: '8', value: '8' },\n    { name: '9', value: '9' },\n    { name: '/', value: '/' },\n    { name: '4', value: '4' },\n    { name: '5', value: '5' },\n    { name: '6', value: '6' },\n    { name: '*', value: '*' },\n    { name: '1', value: '1' },\n    { name: '2', value: '2' },\n    { name: '3', value: '3' },\n    { name: '-', value: '-' },\n    { name: '0', value: '0' },\n    { name: '.', value: '.' },\n    { name: '=', value: '=' },\n    { name: '+', value: '+' },\n  ];\n\n  return (\n    <div className=\"controls\">\n      <div className=\"buttons-container\">\n        {buttons.map(({ name, value }) => (\n          <Button key={name} name={name} value={value} {...props} />\n        ))}\n      </div>\n    </div>\n  );\n};\n","import { useState, useEffect, useCallback } from 'react';\n\nimport { filterInput, calculate } from './calculator';\nimport { checkValidInputValue } from './calculator.utils';\nimport { useErrorMessageContext } from '../../contexts/error-message.context';\n\nimport { Display } from './display/display.component';\nimport { Controls } from './controls/controls.component';\n\nimport './calculator.styles.scss';\n\ninterface CalculatorProps {\n  helpModalOpen: boolean;\n}\n\nexport const Calculator = ({ helpModalOpen }: CalculatorProps) => {\n  const [display, setDisplay] = useState('');\n  const [displayFocused, setDisplayFocused] = useState(false);\n  const { setIsInvalidExpression, setErrorMessage } = useErrorMessageContext();\n\n  const handleCalculate = useCallback(() => {\n    const result = calculate(display);\n\n    if (!display) {\n      return;\n    }\n\n    if (typeof result === 'string') {\n      setIsInvalidExpression(true);\n      setErrorMessage(result);\n    } else {\n      setDisplay(result.toString());\n    }\n  }, [display, setIsInvalidExpression, setErrorMessage]);\n\n  const handleClick = (event: React.BaseSyntheticEvent<MouseEvent>) => {\n    const buttonValue = event.target.value;\n\n    if (buttonValue === '=') {\n      handleCalculate();\n    } else if (buttonValue === 'clear') {\n      setDisplay('');\n    } else if (buttonValue === 'del') {\n      setDisplay(prevDisplay => prevDisplay.slice(0, prevDisplay.length - 1));\n    } else {\n      setDisplay(prevDisplay => prevDisplay + buttonValue);\n    }\n  };\n\n  const handleKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      const keyValue = event.key;\n\n      if (helpModalOpen) {\n        return;\n      }\n\n      if (checkValidInputValue(keyValue) && !displayFocused) {\n        if (['=', 'Enter'].includes(keyValue)) {\n          handleCalculate();\n        } else if (keyValue === 'Escape') {\n          setDisplay('');\n        } else if (keyValue === 'Backspace') {\n          setDisplay(prevDisplay =>\n            prevDisplay.slice(0, prevDisplay.length - 1)\n          );\n        } else {\n          setDisplay(prevDisplay => prevDisplay + keyValue);\n        }\n      }\n\n      if (keyValue === 'Enter' && displayFocused) {\n        handleCalculate();\n      } else if (keyValue === 'Escape') {\n        setDisplay('');\n      }\n    },\n    [displayFocused, handleCalculate, helpModalOpen]\n  );\n\n  useEffect(() => {\n    const validatedDisplay = filterInput(display);\n\n    if (!display) {\n      setIsInvalidExpression(false);\n    }\n\n    if (typeof validatedDisplay === 'string') {\n      setIsInvalidExpression(true);\n      setErrorMessage(validatedDisplay);\n    } else {\n      setIsInvalidExpression(false);\n    }\n  }, [display, setDisplay, setIsInvalidExpression, setErrorMessage]);\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleKeyDown]);\n\n  return (\n    <div className=\"calculator\">\n      <Display\n        currDisplay={display}\n        setDisplay={setDisplay}\n        setDisplayFocused={setDisplayFocused}\n      />\n      <Controls display={display} handleClick={handleClick} />\n    </div>\n  );\n};\n","export const checkValidInputValue = (keyButtonValue: string) => {\n  const controls = ['=', 'Enter', 'Escape', 'Backspace', 'Delete'];\n\n  const checkNumbers =\n    (keyButtonValue >= '0' && keyButtonValue <= '9') || keyButtonValue === '.';\n  const checkOperators = '+-*/'.includes(keyButtonValue);\n  const checkParens = '()'.includes(keyButtonValue);\n  const checkControls = controls.includes(keyButtonValue);\n\n  return checkNumbers || checkOperators || checkParens || checkControls;\n};\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z\"\n});\n\nfunction SvgErrorIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    height: \"24px\",\n    viewBox: \"0 0 24 24\",\n    width: \"24px\",\n    fill: \"#000000\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgErrorIcon);\nexport default __webpack_public_path__ + \"static/media/error-icon.e566894b.svg\";\nexport { ForwardRef as ReactComponent };","import { useErrorMessageContext } from '../../contexts/error-message.context';\n\nimport { ReactComponent as ErrorIcon } from '../../assets/error-icon.svg';\n\nimport './error-message.styles.scss';\n\nexport const ErrorMessage = () => {\n  const { errorMessage } = useErrorMessageContext();\n\n  return (\n    <div className=\"error-message\">\n      <ErrorIcon />\n      <span>{errorMessage}</span>\n    </div>\n  );\n};\n","import { SetStateAction, useEffect } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport './help.styles.scss';\n\ninterface HelpProps {\n  isOpen: boolean;\n  setIsOpen: React.Dispatch<SetStateAction<boolean>>;\n}\n\nexport const Help = ({ isOpen, setIsOpen }: HelpProps) => {\n  const closeModal = (event: React.MouseEvent | KeyboardEvent) => {\n    event.preventDefault();\n    setIsOpen(false);\n  };\n\n  useEffect(() => {\n    if (isOpen) {\n      window.addEventListener('keydown', closeModal);\n    }\n\n    return () => {\n      window.removeEventListener('keydown', closeModal);\n    };\n  });\n\n  if (!isOpen) {\n    return null;\n  }\n\n  return createPortal(\n    <div className=\"help-container\" onClick={closeModal}>\n      <div className=\"help\">\n        <h1>Help</h1>\n        <h3>Instructions:</h3>\n        <ol>\n          <li>\n            Use the buttons or your keyboard to type an expression\n            <ul>\n              <li>Press \"Backspace\" to delete the last character</li>\n              <li>Press \"Escape\" to clear the display</li>\n              <li>You can also copy/paste an expression into the display</li>\n            </ul>\n          </li>\n          <li>Type or press \"=\" or press enter to evaluate the expression</li>\n        </ol>\n        <h3>Valid Operations:</h3>\n        <ul>\n          <li>Addition: \"+\"</li>\n          <li>Subtraction: \"-\"</li>\n          <li>Multiplication: \"*\"</li>\n          <li>Division: \"/\"</li>\n        </ul>\n        <h3>General Syntax Rules:</h3>\n        <ul>\n          <li>Valid numbers include whole numbers and decimals</li>\n          <li>Input must be a valid mathematical expression</li>\n          <li>Must have an equal number of opening and closing parenthesis</li>\n          <li>\n            Only two operators in sequence where the second operator is a \"-\"\n          </li>\n        </ul>\n      </div>\n    </div>,\n    document.getElementById('modal')!\n  );\n};\n","import { useState } from 'react';\n\nimport { useErrorMessageContext } from './contexts/error-message.context';\n\nimport { Nav } from './components/nav/nav.component';\nimport { Calculator } from './components/calculator/calculator.component';\nimport { ErrorMessage } from './components/error-message/error-message.component';\nimport { Help } from './components/help/help.component';\n\nimport './App.scss';\n\nfunction App() {\n  const [helpModalOpen, setHelpModalOpen] = useState(false);\n  const { isInvalidExpression } = useErrorMessageContext();\n\n  return (\n    <div className=\"App\">\n      <Nav setHelpModalOpen={setHelpModalOpen} />\n      <Calculator helpModalOpen={helpModalOpen} />\n      {isInvalidExpression ? <ErrorMessage /> : null}\n      <Help isOpen={helpModalOpen} setIsOpen={setHelpModalOpen} />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ErrorMessageContextProvider } from './contexts/error-message.context';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ErrorMessageContextProvider>\n      <App />\n    </ErrorMessageContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}